---
import Layout from '../layouts/Layout.astro';
import WeatherApp from '../components/WeatherApp';

// TypeScript の型定義
interface WeatherData {
  name: string;
  weather: {
    description: string;
    icon: string;
  }[];
  main: {
    temp: number;
    humidity: number;
  };
  wind: {
    speed: number;
  };
}

// デフォルト都市リスト
const defaultCities: string[] = ['Tokyo', 'Osaka', 'Kyoto', 'Sapporo'];

// ビルド時に実行される - デフォルト都市のデータを事前取得
const defaultWeatherData: Record<string, WeatherData | null> = {};
for (const city of defaultCities) {
  try {
    const apiKey = import.meta.env.WEATHER_API_KEY;
    const response = await fetch(
      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric&lang=ja`
    );
    defaultWeatherData[city] = await response.json();
  } catch (error) {
    console.error(`${city}のデータ取得中にエラーが発生しました:`, error);
    defaultWeatherData[city] = null;
  }
}
---

<Layout title="天気予報アプリ">
  <main class="py-8">
    <div class="container mx-auto px-4">
      <h1 class="text-3xl font-bold mb-6 text-center">天気予報</h1>

      <!-- client:load属性でReactコンポーネントをクライアントサイドでハイドレーション -->
      <WeatherApp
        client:load
        defaultCities={defaultCities}
        defaultWeatherData={defaultWeatherData}
      />
    </div>
  </main>
</Layout>
